// DO NOT EDIT!
// This code is auto generated by GO-XLSX-PROTOBUF
// VERSION {{.Version}}

package {{.Package}}

import (
    "github.com/golang/protobuf/proto"
    "google.golang.org/protobuf/reflect/protoreflect"
	"google.golang.org/protobuf/runtime/protoimpl"
	"reflect"
	"sync"
)

{{- /*生成枚举类型*/}}
{{range $index,$item := .Enums}}
// Defined in table: {{.DefinedTable}}
type {{$item.TypeName}} int32
const ( {{range .Items}}
    {{$item.TypeName}}_{{.FieldName}} {{$item.TypeName}} = {{.Value}} {{if ne .Desc ""}} //{{.Desc}} {{end -}}
  {{end}}
)

var {{$item.TypeName}}_name = map[int32]string{
	{{range .Items -}}
        {{.Value}}:"{{.FieldName}}",
    {{end -}}
}

var {{$item.TypeName}}_value = map[string]int32{
    {{range .Items -}}
        "{{.FieldName}}":{{.Value}},
    {{end -}}
}

func (x {{$item.TypeName}}) String() string {
	name, ok := {{$item.TypeName}}_name[int32(x)]
    if !ok {
        name = "UNKNOWN"
    }
	return name
}
{{end}}

{{- /*生成类类型*/}}
{{- range $index,$item := .Tables}}
// Defined in table: {{.DefinedTable}}
type {{$item.TypeName}} struct { 
{{range $item.Headers}}
    {{if ne .Desc ""}} //{{.Desc}} {{end}}
    {{- if .IsArray}}
    {{.FieldName}} []*{{.ValueType}} `protobuf:"{{.FieldName}},1,opt,name={{.FieldName}}" json:"{{.FieldName}},omitempty"`
    {{- else}}
    {{.FieldName}} {{.ValueType}} `protobuf:"{{.FieldName}},1,opt,name={{.FieldName}}" json:"{{.FieldName}},omitempty"`
    {{end -}}
{{end}}
}
{{- /*proto.Message 接口指定的函数*/}}
func (m *{{$item.TypeName}}) ProtoReflect() protoreflect.Message {
    return nil
}

{{end}}